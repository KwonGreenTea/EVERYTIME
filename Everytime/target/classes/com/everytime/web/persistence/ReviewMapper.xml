<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.everytime.web.persistence.ReviewMapper">

	<resultMap type="com.everytime.web.domain.ReviewVO"
		id="reviewResultMap">
		<id property="reviewId" column="REVIEW_ID" />
		<result property="courseId" column="COURSE_ID" />
		<result property="courseName" column="COURSE_NAME" />
		<result property="professor" column="PROFESSOR" />
		<result property="reviewContent" column="REVIEW_CONTENT" />
		<result property="semester" column="SEMESTER" />
		<result property="project" column="PROJECT" />
		<result property="team" column="TEAM" />
		<result property="grade" column="GRADE" />
		<result property="attend" column="ATTEND" />
		<result property="exam" column="EXAM" />
		<result property="courseRate" column="COURSE_RATE" />
		<result property="reviewLike" column="REVIEW_LIKE" />

	</resultMap>


	<insert id="insertReview">

		INSERT INTO REVIEW VALUES
		(REVIEW_ID_SEQ.NEXTVAL,#{courseId}, #{courseName}, #{professor},
		#{reviewContent}, #{semester}, #{project}, #{team}, #{grade},
		#{attend}, #{exam}, #{courseRate},#{reviewLike})


	</insert>


	<select id="selectReviewByCourseId" resultMap="reviewResultMap">
		SELECT * FROM
		REVIEW WHERE COURSE_ID = #{courseId}
	</select>

	<select id="selectReview" resultMap="reviewResultMap">
		SELECT * FROM REVIEW
	</select>


	<select id="selectTopLikeReviewByCourseId" resultMap="reviewResultMap">
	<![CDATA[
        SELECT *
        FROM (
            SELECT *
            FROM REVIEW
            ORDER BY REVIEW_LIKE DESC
        )
        WHERE ROWNUM <= 2 AND COURSE_ID = #{courseId}
    ]]>
	</select>

	<select id="rateFilterdReview" resultMap="reviewResultMap">
		SELECT * FROM REVIEW
		WHERE COURSE_ID = #{courseId} AND COURSE_RATE = #{courseRate}	
	</select>
	

	<select id="sortFilterReview" resultMap="reviewResultMap">
		<choose>
        <when test="sortCondition == 'earlist'">
            SELECT *
            FROM REVIEW
            WHERE COURSE_ID = #{courseId}
            ORDER BY REVIEW_ID DESC
        </when>
        <when test="sortCondition == 'topLike'">
            SELECT *
            FROM REVIEW
            WHERE COURSE_ID = #{courseId}
            ORDER BY REVIEW_LIKE DESC
        </when>
    </choose>
	
	</select>
	
	
	<update id="updateReviewLike">
		UPDATE REVIEW
		SET REVIEW_LIKE = REVIEW_LIKE + 1
		WHERE
		REVIEW_ID = #{reviewId}

	</update>


</mapper>